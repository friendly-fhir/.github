# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Deploy Docker Container (GHCR)

on:
  workflow_call:
    inputs:
      image-name:
        description: The name of the image.
        required: false
        type: string
        default: ${{ github.event.repository.name }}
      dockerfile:
        description: |
          The path to the Dockerfile to build.
          If unspecified, defaults to 'Dockerfile' in the root of the repository.
        required: false
        default: Dockerfile
        type: string
      dry-run:
        description: |
          If true, the workflow will not push the image to the registry.
        required: false
        default: false
        type: boolean
      path:
        description: |
          The path to build. This corresponds to the <path> argument in 'docker build'.
          If unspecified, defaults to '.'
        required: false
        type: string
        default: '.'
    outputs:
      image-id:
        description: The name of the image that was built.
        value: ${{ jobs.deploy.outputs.image-id }}
      version:
        description: The version of the image that was built.
        value: ${{ jobs.deploy.outputs.version }}
      tagged-image-id:
        description: The fully qualified image id that was built.
        value: ${{ jobs.deploy.outputs.tagged-image-id }}

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  deploy:
    name: Deploy to Container Registry
    runs-on: ubuntu-latest

    outputs:
      image-id: ${{ steps.image.outputs.id }}
      version: ${{ steps.tag.outputs.version }}
      tagged-image-id: ${{ steps.image.outputs.id }}:${{ steps.tag.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine image
        id: image
        run: |
          echo "id=ghcr.io/${{ github.repository_owner }}/${{ inputs.image-name }}" >> "${GITHUB_OUTPUT}"

      - name: Determine tag
        id: tag
        run: |
          # Extract ref prefix for versions and cut the 'v' prefix
          if [[ "${{ github.ref }}" == "refs/tags/v"* ]]; then
            version=$(echo "${{ github.ref }}" | sed -e 's@^refs/tags/v@@')
          elif [[ "${{ github.ref }}" == "refs/heads/${{ github.event.repository.default_branch }}" ]]; then
            version=latest
          else
            version=$(echo "${{ github.ref }}" | sed -e 's@.*/\(.*\)@\1@')
          fi

          echo "version=${version}" >> "${GITHUB_OUTPUT}"

      - name: Login to Registry
        id: login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Collect label information
        id: label
        run: |
          echo "url=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> "${GITHUB_OUTPUT}"
          echo "repo=${{ github.event.repository.name }}" >> "${GITHUB_OUTPUT}"
          echo "owner=${{ github.repository_owner }}" >> "${GITHUB_OUTPUT}"
          echo "timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "${GITHUB_OUTPUT}"

      - name: Build and push image
        id: push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: true
          tags: |
            ${{ steps.image.outputs.id }}:${{ steps.tag.outputs.version }}
          labels: |
            org.friendly-fhir.run.number=${{ github.run_number }}
            org.friendly-fhir.run.attempt=${{ github.run_attempt }}
            org.friendly-fhir.run.actor=${{ github.actor }}
            org.friendly-fhir.run.event=${{ github.event_name }}
            org.friendly-fhir.run=${{ github.run_id }}
            org.friendly-fhir.source.sha=${{ github.sha }}
            org.friendly-fhir.source.ref=${{ github.ref }}
            org.friendly-fhir.source.repo=${{ steps.label.outputs.repo }}
            org.friendly-fhir.source.owner=${{ steps.label.outputs.owner }}
            org.friendly-fhir.source=${{ steps.label.outputs.url }}
            org.opencontainers.image.ref.name=${{ github.ref_name}}
            org.opencontainers.image.vendor=Friendly FHIR
            org.opencontainers.image.title=${{ inputs.image-name }}
            org.opencontainers.image.licenses=${{ github.event.repository.license }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.documentation=https://friendly-fhir.org/${{ steps.label.outputs.repo }}
            org.opencontainers.image.url=${{ steps.label.outputs.url }}
            org.opencontainers.image.source=${{ steps.label.outputs.url }}
            org.opencontainers.image.created=${{ steps.label.outputs.timestamp }}

      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v1
        id: attest
        with:
          subject-name: ${{ steps.image.outputs.id }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
          github-token: ${{ github.token }}
