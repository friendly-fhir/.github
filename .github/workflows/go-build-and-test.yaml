# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build and Test

on:
  workflow_call:
    inputs:
      packages:
        type: string
        description: |
          A list of packages to build and test.
          Default: ./...
        default: ./...
        required: false
      go-version-file:
        type: string
        description: |
          The path to the go version file.
          Default: go.mod
        default: go.mod
        required: false
      coverage-file-name:
        type: string
        description: |
          The name of the coverage file to output.
          Default: coverage.out
        default: coverage.out
        required: false
      coverage-artifact-name:
        type: string
        description: |
          The name to use for the generated coverage artifact.
          Default: coverage
        default: coverage
        required: false
      os-coverage-artifact-prefix:
        type: string
        description: |
          The prefix to use for the coverage files per OS.
          Default: "coverage-"
        default: coverage-
        required: false
      short-test:
        type: boolean
        description: |
          Whether or not to run a short test.
          Default: false
        default: false
        required: false
    outputs:
      coverage-artifact-name:
        description: The artifact name of the uploaded coverage
        value: ${{ inputs.coverage-artifact-name }}
      coverage-artifact-id:
        description: The artifact ID of the uploaded coverage
        value: ${{ jobs.merge-coverage.outputs.coverage-artifact-id }}
      coverage-artifact-url:
        description: The URL of the uploaded coverage
        value: ${{ jobs.merge-coverage.outputs.coverage-artifact-url }}

permissions:
  # Required to write the coverage artifacts
  id-token: write

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os:
          - ubuntu
          - windows
          - macos
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ inputs.go-version-file }}

      - name: Download dependencies
        run: go mod download

      - name: Generate
        run: go generate ${{ inputs.packages }}

      - name: Build
        env:
          CGO_ENABLED: 0
        run: go build -v ${{ inputs.packages }}

      - name: Run tests
        id: test
        shell: bash
        run: |
          file="$(cd '${{ runner.temp }}'; pwd)/${{ matrix.os }}-coverage.out"
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            echo 'coverage-file=${{ runner.temp }}\${{ matrix.os }}-coverage.out' >> "${GITHUB_OUTPUT}"
          else
            echo "coverage-file=${file}" >> "${GITHUB_OUTPUT}"
          fi
          if ${{ inputs.short-test }}; then
            go test -short -v -coverprofile "${file}" ${{ inputs.packages }}
          else
            go test -v -coverprofile "${file}" ${{ inputs.packages }}
          fi

      - name: Upload Coverage
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.os-coverage-artifact-prefix }}${{ matrix.os }}
          path: ${{ steps.test.outputs.coverage-file }}
          retention-days: 1

  merge-coverage:
    name: Merge Coverage
    needs: [build]
    runs-on: ubuntu-latest
    outputs:
      coverage-artifact-id: ${{ steps.upload-coverage.outputs.artifact-id }}
      coverage-artifact-url: ${{ steps.upload-coverage.outputs.artifact-url }}
    steps:
      - name: Download Coverage
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ inputs.os-coverage-artifact-prefix }}*
          path: ${{ runner.temp }}
          merge-multiple: true

      - name: Install gcovmerge
        run: go install github.com/wadey/gocovmerge@latest

      - name: Merge Coverage
        id: merge
        run: |
          file="${{ runner.temp }}/merged/${{ inputs.coverage-file-name }}"
          merge=$(go env GOPATH)/bin/gocovmerge
          mkdir ${{ runner.temp }}/merged
          ${merge} ${{ runner.temp }}/*-coverage.out > "${file}"
          echo "coverage-file=${file}" >> "${GITHUB_OUTPUT}"

      - name: Upload Coverage
        id: upload-coverage
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.coverage-artifact-name }}
          path: "${{ steps.merge.outputs.coverage-file }}"
          retention-days: 7
